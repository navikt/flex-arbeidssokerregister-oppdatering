apiVersion: "nais.io/v1alpha1"
kind: "Application"
metadata:
  name: flex-arbeidssokerregister-oppdatering
  namespace: flex
  labels:
    team: flex
  annotations:
    config.linkerd.io/proxy-outbound-connect-timeout: 10s
spec:
  image: {{image}}
  replicas:
    min: 1 
    max: 1
  port: 8080
  liveness:
    path: /internal/health
  readiness:
    path: /internal/health
  startup:
    path: /internal/health
    initialDelay: 60
  kafka:
    pool: {{kafkaPool}}
  azure:
    application:
      enabled: true
      tenant: {{azureTenant}}
  prometheus:
    enabled: true
    path: /internal/prometheus
  resources:
    limits:
      memory: {{memory}}
    requests:
      cpu: {{cpu}}
      memory: {{memory}}
  observability:
    autoInstrumentation:
      enabled: true
      runtime: java
    logging:
      destinations:
        - id: loki
        - id: elastic
  gcp:
    sqlInstances:
      - type: {{db_type}}
        tier: {{db_tier}}
        highAvailability: {{db_highAvailability}}
        pointInTimeRecovery: {{db_pointInTimeRecovery}}
        diskAutoresize: true
        databases:
          - name: flex-arbeidssokerregister-oppdatering-db
            envVarPrefix: DB
        maintenance:
          day: 2
          hour: 2
  accessPolicy:
    outbound:
      rules:
        - application: paw-kafka-key-generator
          namespace: paw
  env:
  {{#each env}}
     - name: {{@key}}
       value: "{{this}}"
  {{/each}}