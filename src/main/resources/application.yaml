server:
  port: 8080
  shutdown: graceful

spring:
  main.banner-mode: 'off'
  profiles:
    active: default
  flyway:
    enabled: true
  datasource:
    url: "${DB_JDBC_URL}&reWriteBatchedInserts=true"
    hikari:
      minimum-idle: 1
      maximum-pool-size: 5

management:
  endpoint:
    health.probes.enabled: true
    prometheus:
      access: read_only
  endpoints.web:
    base-path: "/internal"
    exposure.include: health, prometheus
  health:
    livenessstate.enabled: true
    readinessState.enabled: true
  prometheus:
    metrics.export.enabled: true

logging.config: "classpath:logback.xml"

aiven-kafka:
  auto-offset-reset: none
  security-protocol: SSL

no.nav.security.jwt:
  issuer:
    azureator:
      discoveryurl: ${AZURE_APP_WELL_KNOWN_URL}
      accepted_audience: ${AZURE_APP_CLIENT_ID}
  client:
    registration:
      kafka-key-generator-client-credentials:
        token-endpoint-url: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
        grant-type: client_credentials
        scope: api://${KAFKA_KEY_GENERATOR_AAD_CLIENT_ID}/.default
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-secret: ${AZURE_APP_CLIENT_SECRET}
          client-auth-method: client_secret_basic