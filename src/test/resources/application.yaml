server:
  port: 8080

spring:
  main.banner-mode: 'off'
  profiles:
    active: test
  flyway:
    enabled: true
  datasource:
    url: "jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_DATABASE}?reWriteBatchedInserts=true"
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    hikari:
      minimum-idle: 1
      maximum-pool-size: 5

management:
  endpoint:
    health.probes.enabled: true
    prometheus:
      access: read_only
  endpoints.web:
    base-path: "/internal"
    exposure.include: health, prometheus
  health:
    livenessstate.enabled: true
    readinessState.enabled: true
  prometheus:
    metrics.export.enabled: true

logging.config: "classpath:logback-test.xml"

aiven-kafka:
  auto-offset-reset: earliest
  security-protocol: PLAINTEXT

KAFKA_TRUSTSTORE_PATH: /
KAFKA_CREDSTORE_PASSWORD: /
KAFKA_KEYSTORE_PATH: /
KAFKA_SCHEMA_REGISTRY: "url"
KAFKA_SCHEMA_REGISTRY_USER: "user"
KAFKA_SCHEMA_REGISTRY_PASSWORD: "pass"

no.nav.security.jwt:
  issuer:
    azureator:
      discoveryurl: http://localhost:${mock-oauth2-server.port}/azureator/.well-known/openid-configuration
      accepted_audience: flex-arbeidssokerregister-oppdatering-client-id
  client:
    registration:
      kafka-key-generator-client-credentials:
        token-endpoint-url: http://localhost:${mock-oauth2-server.port}/azureator/token
        grant-type: client_credentials
        scope: kafka-key-generator-client
        authentication:
          client-id: client-id
          client-secret: client-secret
          client-auth-method: client_secret_basic
      arbeidssoekerregisteret-client-credentials:
        token-endpoint-url: http://localhost:${mock-oauth2-server.port}/azureator/token
        grant-type: client_credentials
        scope: arbeidssoekerregisteret-client0
        authentication:
          client-id: client-id
          client-secret: client-secret
          client-auth-method: client_secret_basic
